#!/usr/bin/env python

#    pastie - a simple clipboard manager
#    Copyright (C) 2010  Felipe Morales <hel.sheep@gmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import getopt
import gettext
import gtk
import appindicator

import pastielib.protector as protector
import pastielib.cli as cli

if __name__ == "__main__":
	# if the argument "-p" is passed, print the current clipboard contents, and exit
	try:
		opts, args = getopt.getopt(sys.argv[1:], 'p')
	except:
		sys.exit(2)
	for o, a in opts:
		if o == "-p":
			cli.print_current()
			sys.exit()
		else:
			assert False, "unhandled option"
	
	# if we pipe the output of another program to pastie, it sets it as the current clipboard
	if not sys.stdin.isatty():
		text = sys.stdin.read()
		if text not in ("", None):
			cli.add_to_history(text)
			sys.stdout.write(text)
			sys.exit()

	# load translations
	gettext.install("pastie", "/usr/share/locale")
	
	# create indicator
	indicator = appindicator.Indicator("pastie", "gtk-paste", appindicator.CATEGORY_APPLICATION_STATUS)
	indicator.set_status(appindicator.STATUS_ACTIVE)

	# create clipboard protector (this is the core of the program)
	clipboard_protector = protector.ClipboardProtector(indicator)

	gtk.main()
